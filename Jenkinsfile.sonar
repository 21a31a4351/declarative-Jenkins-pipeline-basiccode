pipeline{
    agent{
        label 'app'
    }
    triggers {
        pollSCM('* * * * *')
    }
    stages{
        stage('git-clone'){
            steps {
                git url:'https://github.com/21a31a4351/spring-petclinic.git', branch:'main'
            }
        }
        stage('build'){
            steps{
                sh 'mvn package'
            }
        }
        stage('sonarQube'){
            steps{
                withCredentials([string(credentialsId: 'sonarid', variable: 'SONAR_TOKEN')]){
                    withSonarQubeEnv('nandakishore'){
                        sh """mvn package sonar:sonar \
                            -Dsonar.projectKey=javamainapplication_javaapp \
                            -Dsonar.organization:javamainapplication \
                            -Dsonar.host.url =https://sonarcloud.io \
                            -Dsonar.login=$SONAR_TOKEN"""
                    }
                           
                }
            }
        }
    }
    post{
        always{
            junit '**/target/surefire-reports/*.xml'
            archiveArtifacts artifacts: '**/target/*.jar'
        }
        success{
            echo 'build successful in sonar branch'
        }
        failure{
            echo 'build failed'
        }
    }
}
